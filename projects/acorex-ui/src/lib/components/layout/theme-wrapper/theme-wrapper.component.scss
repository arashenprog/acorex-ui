$color-suffix: color;
$size-suffix: size;
//
$white: #fff;
$primary: #3949ab;
$secondary: #444444;
$gray: #dbdbdb;
$danger: #db0f23;
$success: #2e933c;
$warning: #faa916;
$info: #2774cc;
$shadow: rgba(0, 0, 0, 0.1);
//
$colors: (
  white: $white,
  black: #000,
  danger: (
    "": $danger,
    light: lighten($danger, 15%),
    dark: darken($danger, 15%),
    fore: $white
  ),
  success: (
    "": $success,
    light: lighten($success, 15%),
    dark: darken($success, 15%),
    fore: $white
  ),
  warning: (
    "": $warning,
    light: lighten($warning, 15%),
    dark: darken($warning, 15%),
    fore: $white
  ),
  info: (
    "": $info,
    light: lighten($info, 15%),
    dark: darken($info, 15%),
    fore: $white
  ),
  gray: (
    "": $gray,
    light: lighten($gray, 15%),
    dark: darken($gray, 15%),
    fore: $white
  ),
  primary: (
    "": $primary,
    fore: $white,
    light: lighten($primary, 15%),
    dark: darken($primary, 15%),
    trans: transparentize($primary, 0.5),
    lighter: transparentize($primary, 0.9)
  ),
  secondary: (
    "": $secondary,
    fore: $white,
    light: lighten($secondary, 15%),
    dark: darken($secondary, 15%),
    trans: transparentize($secondary, 0.5)
  ),
  shadow: $shadow,
  border: $gray,
  outline: $primary
);

$sizes: (
  sp: (
    sm: 5px,
    md: 10px,
    lg: 15px,
    xl: 20px
  ),
  font: (
    sm: 0.75em,
    md: 1em,
    lg: 1.25em,
    xl: 1.5em
  ),
  border: (
    width: 1px,
    radius: 4px
  )
);

:root {
  @each $name, $color in $colors {
    @if type-of($color) == "map" {
      @each $subname, $variant in $color {
        @if $subname== "" {
          --#{$name}-#{$color-suffix}: #{$variant};
        } @else {
          --#{$name}-#{$subname}-#{$color-suffix}: #{$variant};
        }
      }
    } @else {
      --#{$name}-#{$color-suffix}: #{$color};
    }
  }

  @each $name, $size in $sizes {
    @if type-of($size) == "map" {
      @each $subname, $variant in $size {
        --#{$name}-#{$subname}-#{$size-suffix}: #{$variant};
      }
    } @else {
      --#{$name}-#{$size-suffix}: #{$size};
    }
  }
}
html,
body {
  -webkit-overflow-scrolling: touch;
  scroll-behavior: smooth;
}
::-webkit-scrollbar {
  width: 10px;
  height: 10px;
}
::-webkit-scrollbar-button {
  width: 0px;
  height: 0px;
}
::-webkit-scrollbar-thumb {
  background: var(--gray-color);
  border: none;
  border-radius: 50px;
}
::-webkit-scrollbar-thumb:hover {
  background: var(--primary-light-color);
}
::-webkit-scrollbar-thumb:active {
  background: var(--primary-color);
}
::-webkit-scrollbar-track {
  background: var(--white-color);
  border: none;
  border-radius: 5px;
}
::-webkit-scrollbar-track:hover {
  background: var(--gray-color);
}
::-webkit-scrollbar-track:active {
  background: var(--gray-color);
}
::-webkit-scrollbar-corner {
  background: transparent;
}
.rtl {
  .ax-field-set-button {
    left: 0;
    right: initial !important;
  }
}

.img-responsive {
  display: block;
  margin: auto;
  width: 100%;
}

.ax-field-set {
  width: 100%;
  border: 0;
  display: inline-flex;
  padding: 0;
  position: relative;
  min-width: 0;
  flex-direction: column;
  vertical-align: top;

  .ax-field-set-wrapper {
    color: var(--secondary-light-color);
    cursor: text;
    display: inline-flex;
    align-items: center;
    position: relative;

    fieldset {
      top: 0;
      left: 0;
      right: 0;
      bottom: 0;
      margin: 0;
      padding: 0;
      position: absolute;
      border-style: solid;
      border-width: var(--border-width-size);
      border-radius: var(--border-radius-size);
      pointer-events: none;
      border-color: var(--border-color);

      legend {
        width: auto !important;
        padding: 0 var(--sp-sm-size);
        margin: 0 var(--sp-sm-size);
        font-size: var(--font-sm-size);
        line-height: inherit;
        color: inherit;
        white-space: normal;
      }
    }
  }

  input {
    font-size: var(--font-md-size);
    color: currentColor;
    width: 100%;
    border: 0;
    margin: 0;
    padding: 15px 12px 7px 12px;
    display: block;
    min-width: 0;
    height: 100%;
    box-sizing: content-box;
    background: none;
    -webkit-tap-highlight-color: transparent;
    outline-color: transparent;
  }

  .ax-field-set-button {
    position: absolute;
    right: 0;
    display: flex;
    justify-content: center;
    align-items: center;
    margin: 5px;
    border: none;
    &:first-child {
      margin-right: 10px;
    }
    button {
      display: flex;
      justify-content: center;
      align-items: center;
      width: calc(var(--baseObjectsHeight) / 2);
      height: calc(var(--baseObjectsHeight) / 2);
      i {
        font-size: var(--font-sm-size);
      }
    }
  }
}

.input-focused {
  border-color: var(--primary-color) !important;
  color: var(--primary-color) !important;
}

.input-error {
  border-color: var(--danger-color) !important;
  color: var(--danger-color) !important;
}

.input-success {
  border-color: var(--success-color) !important;
  color: var(--success-color) !important;
}

.validation-text {
  font-size: var(--font-sm-size);
  color: var(--danger-color);
  padding: var(--sp-sm-size) var(--sp-lg-size);
}

@each $name, $color in $colors {
  @if type-of($color) == "map" {
    @each $subname, $variant in $color {
      @if $subname== "" {
        .#{$name} {
          color: var(--#{$name}-#{$color-suffix}) !important;
        }
        .bk-#{$name} {
          background-color: var(--#{$name}-#{$color-suffix}) !important;
          color: var(--#{$name}-fore-#{$color-suffix}) !important;
        }
        .btn-#{$name} {
          color: var(--#{$name}-fore-#{$color-suffix});
          background-color: var(--#{$name}-#{$color-suffix});
          border-color: var(--#{$name}-#{$color-suffix});
        }
        .btn-#{$name}:hover {
          background-color: var(--#{$name}-dark-#{$color-suffix}) !important;
          border-color: var(--#{$name}-dark-#{$color-suffix}) !important;
        }
      } @else {
        .#{$name}-#{$subname} {
          color: var(--#{$name}-#{$subname}-#{$color-suffix}) !important;
        }
        .bk-#{$name}-#{$subname} {
          background-color: var(
            --#{$name}-#{$subname}-#{$color-suffix}
          ) !important;
          color: var(--#{$name}-fore-#{$color-suffix}) !important;
        }
        .btn-#{$name}-#{$subname} {
          color: var(--#{$name}-fore-#{$color-suffix});
          background-color: var(--#{$name}-#{$subname}-#{$color-suffix});
          border-color: var(--#{$name}-#{$subname}-#{$color-suffix});
        }
        .btn-#{$name}:hover {
          background-color: var(--#{$name}-dark-#{$color-suffix}) !important;
          border-color: var(--#{$name}-dark-#{$color-suffix}) !important;
        }
        .btn-#{$name}:disabled {
          background-color: var(--#{$name}-light-#{$color-suffix}) !important;
          border-color: var(--#{$name}-light-#{$color-suffix}) !important;
        }
      }
    }
  } @else {
    .#{$name} {
      color: var(--#{$name}-#{$color-suffix}) !important;
    }
    .bk-#{$name} {
      background-color: var(--#{$name}-#{$color-suffix}) !important;
      color: var(--#{$name}-fore-#{$color-suffix}) !important;
    }
    .btn-#{$name} {
      color: var(--#{$name}-fore-#{$color-suffix});
      background-color: var(--#{$name}-#{$color-suffix});
      border-color: var(--#{$name}-#{$color-suffix});
    }
    .btn-#{$name}:hover {
      background-color: var(--#{$name}-dark-#{$color-suffix}) !important;
      border-color: var(--#{$name}-dark-#{$color-suffix}) !important;
    }
    .btn-#{$name}:disabled {
      background-color: var(--#{$name}-light-#{$color-suffix}) !important;
      border-color: var(--#{$name}-light-#{$color-suffix}) !important;
    }
  }
}

.circle-button {
  background-color: var(--white-color);
  border: 1px solid;
  border-color: inherit;
  color: var(--border-color);
  width: 40px;
  height: 40px;
  cursor: pointer;
  outline-color: transparent !important;
  border-radius: 20px;
  display: flex;
  justify-content: center;
  align-items: center;
  margin-right: 10px;

  &:hover {
    background-color: var(--primary-color);
    color: var(--white-color);
  }
}
.ax-flex {
  display: flex !important;
}
.ax-flex-row {
  flex-direction: row !important;
}
.ax-flex-row-rev {
  flex-direction: row-reverse !important;
}
.ax-flex-col {
  flex-direction: column !important;
}
.ax-flex-col-rev {
  flex-direction: column-reverse !important;
}
.ax-flex-center {
  display: flex !important;
  justify-content: center !important;
  align-items: center !important;
}
.ax-flex-wrap {
  flex-wrap: wrap !important;
}
.ax-flex-wrap-rev {
  flex-wrap: wrap-reverse !important;
}

.ax-flex-no-wrap {
  flex-wrap: nowrap !important;
}
.ax-overflow-auto {
  overflow: auto !important;
}
.ax-pad-sm {
  padding: var(--sp-sm-size) !important;
}
.ax-pad-md {
  padding: var(--sp-md-size) !important;
}
.ax-pad-lg {
  padding: var(--sp-lg-size) !important;
}
.ax-pad-xl {
  padding: var(--sp-xl-size) !important;
}

.ax-mar-sm {
  margin: var(--sp-sm-size) !important;
}
.ax-mar-md {
  margin: var(--sp-md-size) !important;
}
.ax-mar-lg {
  margin: var(--sp-lg-size) !important;
}
.ax-mar-xl {
  margin: var(--sp-xl-size) !important;
}

.ax-card-box {
  background: var(--white);
  box-shadow: 0px 1px 7px 0px var(--border-color);
  border-radius: var(--border-radius-size);
}
.ax-full-width {
  width: 100% !important;
}
.ax-full-height {
  height: 100% !important;
}
.ax-full-page-wrapper {
  width: 100vw;
  height: 100vh;
  background: var(--white);
}
